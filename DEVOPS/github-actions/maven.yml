# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Premier Pipeline Java

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Récupération du code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Scan SonarQube
        run: mvn verify sonar:sonar -Dsonar.projectKey=jeremy
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Qualité SonarQube
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        with:
          scanMetadataReportFile: target/sonar/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  # build:
  #   needs: test
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4
    
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: maven
    
  #   - name: Build with Maven
  #     run: mvn -B package --file pom.xml
